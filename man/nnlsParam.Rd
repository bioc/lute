% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nnlsParam-class.R
\name{nnlsParam}
\alias{nnlsParam}
\title{Make new object of class nnlsParam}
\usage{
nnlsParam(y, z, s = NULL, return.info = FALSE)
}
\arguments{
\item{y}{Bulk mixed signals matrix of samples, which can be matched to 
single-cell samples.}

\item{z}{Signature matrix of cell type-specific signals. If not provided, 
can be computed from a provided \linkS4class{ExpressionSet} containing 
single-cell data.}

\item{s}{Cell size factor transformations of length equal to the K cell types to deconvolve.}

\item{return.info}{Whether to return metadata and original method outputs 
with predicted proportions.}
}
\value{
Object of class \linkS4class{nnlsParam}
}
\description{
Main constructor for class \linkS4class{nnlsParam}.
}
\details{
Main parameter class for mapping inputs to the non-negative least 
squares (NNLS) deconvolution algorithm, implemented as \code{nnls::nnls()}.
}
\examples{
lexample <- lute:::.get_decon_example_data()
param <- nnlsParam(s = lexample[["s"]], y = lexample[["y"]], z = lexample[["z"]])

# return only predicted proportions
deconvolution(param)

# return full results
param@return.info <- TRUE
names(deconvolution(param))

}
\seealso{
\linkS4class{referencebasedParam}, \linkS4class{deconvolutionParam}
}
