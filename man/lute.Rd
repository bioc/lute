% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lute_framework.R
\name{lute}
\alias{lute}
\title{lute framework}
\usage{
lute(
  sce = NULL,
  z = NULL,
  y = NULL,
  y.se = NULL,
  s = NULL,
  return.info = FALSE,
  markers.per.type = 20,
  assay.name = "counts",
  celltype.variable = "celltype",
  typemarker.algorithm = "findmarkers",
  deconvolution.algorithm = "nnls",
  verbose = TRUE
)
}
\arguments{
\item{sce}{Object of type SingleCellExperiment. Optional (see z).}

\item{z}{Signature matrix of cell type-specific signals. Optional (see sce).}

\item{y}{Bulk mixed signals matrix of samples, which can be matched to 
single-cell samples. Optional (see y.se).}

\item{y.se}{SummarizedExperiment or similar data type containing the bulk signals
matrix in its assays (e.g. accessible with assays(y.se)[[assay.name]] using
the provided assay.name argument). Optional (see y).}

\item{s}{Cell size factor transformations of length equal to the K cell types 
to deconvolve. Optional, if not provided, uses equal weights for types.}

\item{return.info}{Whether to return metadata and original method outputs 
with predicted proportions.}

\item{markers.per.type}{Number of top markers to get per cell type.}

\item{assay.name}{Name of expression matrix in sce, and optionally y.se, 
assays. Optional (see sce, y.se).}

\item{celltype.variable}{Name of cell type variable in sce coldata.}

\item{typemarker.algorithm}{Which type-specific marker selection algorthm to 
use. If NULL, skips type marker analyses.}

\item{deconvolution.algorithm}{Where deconvolution algorithm to use. If NULL, 
skips deconvolution.}

\item{verbose}{Whether to show verbose status messages.}
}
\value{
A list containing results returned from type marker selection and
deconvolution runs, with additional information returned if
 \code{return.info == TRUE}.
}
\description{
Perform a deconvolution experiment.
}
\details{
Main function to use the lute deconvolution framework. Manages data
conversions and mappings to deconvolution experiment steps, including setup,
gene marker identification, and main deconvolution runs.

Support is provided for \linkS4class{SummarizedExperiment}-type or 
matrix-type inputs for the Z signature matrix and Y bulk signals matrix. Note,
both Z and Y need to be provided or derivable in order to run deconvolution.
}
\examples{
# get example bulk data
y <- get_decon_example_data()$y

# get example sce
sce <- random_sce()[seq(10),]

# get framework results
experiment.results <- lute(sce = sce, y = y, typemarker.algorithm = NULL)

}
