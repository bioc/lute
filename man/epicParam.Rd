% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/epicParam-class.R
\name{epicParam}
\alias{epicParam}
\title{Make new object of class epicParam}
\usage{
epicParam(y, z, s = NULL, z.var = NULL, return.info = FALSE)
}
\arguments{
\item{y}{Bulk mixed signals matrix of samples, which can be matched to single-cell samples.}

\item{z}{Signature matrix of cell type-specific signals. If not provided, can be computed from a
provided ExpressionSet containing single-cell data.}

\item{s}{Cell size factor transformations of length equal to the K cell types to deconvolve.}

\item{z.var}{Signature variances matrix of same dimensions as z.}

\item{return.info}{Whether to return metadata and original method outputs with predicted proportions.}
}
\value{
New object of class \linkS4class{epicParam}.
}
\description{
Main constructor for class \linkS4class{epicParam}.
}
\details{
Takes standard inputs for the EPIC algorithm
}
\examples{
# example
lexample <- lute:::.get_decon_example_data()
param <- epicParam(s = lexample[["s"]], y = lexample[["y"]], z = lexample[["z"]])

# return only predicted proportions
deconvolution(param)

# return full results
param@return.info <- TRUE
names(deconvolution(param))
# [1] "predictions" "result.info" "metadata"

}
