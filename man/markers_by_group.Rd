% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lute_typemarker-selection.R
\name{markers_by_group}
\alias{markers_by_group}
\title{markers_by_group}
\usage{
markers_by_group(
  sce,
  group.variable = "sample_id",
  celltype.variable = "celltype",
  assay.name = "counts",
  markers.per.type = 100,
  typemarker.algorithm = "meanratios",
  return.type = "list",
  downsample.within.group = T,
  parallelize = T,
  verbose = FALSE
)
}
\arguments{
\item{sce}{Object of type \linkS4class{SingleCellExperiment}.}

\item{group.variable}{Variable name in \code{sce} coldata containing the 
group ID labels.}

\item{celltype.variable}{Variable name in \code{sce} coldata containing the 
cell type labels.}

\item{assay.name}{Name of the expression matrix in \code{sce} assays to use 
for marker selection.}

\item{markers.per.type}{Target maximum number of genes per cell type to select.}

\item{typemarker.algorithm}{Algorithm for typemarker selection, supported in 
\code{lute} (see \code{?typemarkers} for details).}

\item{return.type}{Format of return data, either "list" or "table".}

\item{downsample.within.group}{Whether to downsample on cell types prior to 
marker selection (performed *within* groups)}

\item{parallelize}{Whether to use parallelization (mclapply) when getting 
markers by group. Otherwise uses lapply.}

\item{verbose}{Whether to show verbose status messages.}
}
\value{
List or table of markers (see \code{return.type} argument), 
organized by group IDs.
}
\description{
Get gene markers organized by groups.
}
\details{
Gets the within-group cell type markers.
}
\examples{
sce.example <- random_sce(num.cells = 100, num.genes = 100)
sce.example[["sample_id"]] <- c(rep("sample1", 10), rep("sample2", 80), rep("sample1", 10))
group.markers <- markers_by_group(sce.example)



}
\seealso{
\code{filter_group_markers}
}
