% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scdcParam-class.R
\name{scdcParam}
\alias{scdcParam}
\title{Make new object of class scdcParam}
\usage{
scdcParam(
  y = NULL,
  yi = NULL,
  z = NULL,
  s = NULL,
  y.eset = NULL,
  sc.eset = NULL,
  celltype.subset = NULL,
  assay.name = "counts",
  batch.variable = "batch.id",
  celltype.variable = "celltype",
  iter.max = 1000,
  nu = 1e-04,
  epsilon = 0.01,
  weight.basis = TRUE,
  transform.bisque = FALSE,
  truep = NULL,
  return.info = FALSE
)
}
\arguments{
\item{y}{Bulk mixed signals matrix of samples, which can be matched to single-cell samples.}

\item{yi}{Bulk mixed signals matrix of independent samples, which should not overlap samples in y.}

\item{z}{Signature matrix of cell type-specific signals. If not provided, can be computed from a
provided ExpressionSet containing single-cell data.}

\item{s}{Cell size factor transformations of length equal to the K cell types to deconvolve.}

\item{y.eset}{ExpressionSet of bulk mixed expression signals.}

\item{sc.eset}{ExpressionSet of single-cell transcriptomics data.}

\item{celltype.subset}{Vector of cell types to use for basis matrix.}

\item{assay.name}{Expression data type (e.g. counts, logcounts, tpm, etc.).}

\item{batch.variable}{Name of variable identifying the batches in sc.eset pData/coldata.}

\item{celltype.variable}{Name of cell type labels variable in sc.eset pData/coldata.}

\item{iter.max}{Argument iter.max for SCDC_prop().}

\item{nu}{Argument nu for SCDC_prop().}

\item{epsilon}{Argument epsilon for SCDC_prop().}

\item{weight.basis}{Argument weight.basis for SCDC_prop().}

\item{transform.bisque}{Whether to perform transformation from the Bisque algorithm.}

\item{truep}{Argument truep for SCDC_prop().}

\item{return.info}{Whether to return metadata and original method outputs with predicted proportions.}
}
\value{
Object of class \linkS4class{scdcParam}.
}
\description{
Main constructor for class \linkS4class{scdcParam}.
}
\details{
Takes standard inputs for the Bisque method. If user provides matrices, will convert these
into ExpressionSet objects compatible with the main bisque method.
}
