% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/set_methods.R
\name{get_set_heatmap}
\alias{get_set_heatmap}
\title{get_set_heatmap}
\usage{
get_set_heatmap(
  set,
  assayname = "logcounts_bytype",
  type.variable = NULL,
  group.variable = NULL,
  mtype.variable = NULL,
  randcol.seednum = 0,
  scale.hmdata = TRUE,
  hm.topanno = NULL,
  hm.leftanno = NULL,
  verbose = FALSE
)
}
\arguments{
\item{set}{A SummarizedExperimentTypes object or similar.}

\item{assayname}{Name of assays matrix in set object to plot.}

\item{type.variable}{Variable name for type labels in set colData.}

\item{group.variable}{Variable name for type labels in set colData}

\item{mtype.variable}{Variable name for marker labels in rowData.}

\item{randcol.seednum}{Number for random seed to make random colors.}

\item{scale.hmdata}{Whether to rescale heatmap data with scale().}

\item{hm.topanno}{Optional object produced using HeatmapAnnotation(). If NULL,
makes this annotation using set colData and other specified arguments.}

\item{hm.leftanno}{Optional object produced using rowAnnotation(). If NULL,
makes this annotatiomn using set rowData and other specified arguments.}

\item{verbose}{Whether to show verbose status messages.}
}
\description{
Make a standard heatmap of set marker expression with row (marker) and 
column (type) annotations.
}
\examples{
# get randomized singlecellexperiment
sce <- random_sce()
sce[["donor"]] <- c(rep("donor1", 2), rep("donor2", 8))
sce[["typevar"]] <- paste0(sce[["celltype"]], ";", sce[["donor"]])
# make new set from sce
set1 <- set_from_sce(sce, type.variable = "typevar")
set1[["donor"]] <- gsub(".*;", "", set1[["type"]])
set1[["typevar"]] <- gsub(";.*", "", set1[["type"]])
rowData(set1)$marker_type <- c(rep("type1", 10), rep("type2", 10))
# heatmap of type;donor assays
hm1 <- get_set_heatmap(set1, type.variable = "typevar", 
                       group.variable = "donor", mtype.variable = "marker_type")
# heatmap of type assays
set2 <- set_from_set(set1, typevar = "typevar")
hm2 <- get_set_heatmap(set2, type.variable = "type", 
                       mtype.variable = "marker_type")
}
